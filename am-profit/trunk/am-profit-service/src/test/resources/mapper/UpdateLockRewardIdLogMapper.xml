<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.le.jr.am.profit.dao.UpdateLockRewardIdLogMapper">
  <resultMap id="BaseResultMap" type="com.le.jr.am.profit.domain.UpdateLockRewardIdLog">
    <id column="oid" jdbcType="VARCHAR" property="oid" />
    <result column="orderOid" jdbcType="VARCHAR" property="orderOid" />
    <result column="lockRewardOldId" jdbcType="VARCHAR" property="lockRewardOldId" />
    <result column="lockRewardNewId" jdbcType="VARCHAR" property="lockRewardNewId" />
    <result column="beginAccuralOldDate" jdbcType="DATE" property="beginAccuralOldDate" />
    <result column="beginAccuralNewDate" jdbcType="DATE" property="beginAccuralNewDate" />
    <result column="beginRedeemOldDate" jdbcType="DATE" property="beginRedeemOldDate" />
    <result column="beginRedeemNewDate" jdbcType="DATE" property="beginRedeemNewDate" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    oid, orderOid, lockRewardOldId, lockRewardNewId, beginAccuralOldDate, beginAccuralNewDate, 
    beginRedeemOldDate, beginRedeemNewDate, createTime, updateTime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from T_MONEY_UPDATE_LOCKREWARDID_LOG
    where oid = #{oid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from T_MONEY_UPDATE_LOCKREWARDID_LOG
    where oid = #{oid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.le.jr.am.profit.domain.UpdateLockRewardIdLog">
    insert into T_MONEY_UPDATE_LOCKREWARDID_LOG (oid, orderOid, lockRewardOldId, 
      lockRewardNewId, beginAccuralOldDate, beginAccuralNewDate, 
      beginRedeemOldDate, beginRedeemNewDate, createTime, 
      updateTime)
    values (#{oid,jdbcType=VARCHAR}, #{orderOid,jdbcType=VARCHAR}, #{lockRewardOldId,jdbcType=VARCHAR}, 
      #{lockRewardNewId,jdbcType=VARCHAR}, #{beginAccuralOldDate,jdbcType=DATE}, #{beginAccuralNewDate,jdbcType=DATE}, 
      #{beginRedeemOldDate,jdbcType=DATE}, #{beginRedeemNewDate,jdbcType=DATE}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.le.jr.am.profit.domain.UpdateLockRewardIdLog">
    insert into T_MONEY_UPDATE_LOCKREWARDID_LOG
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="oid != null">
        oid,
      </if>
      <if test="orderOid != null">
        orderOid,
      </if>
      <if test="lockRewardOldId != null">
        lockRewardOldId,
      </if>
      <if test="lockRewardNewId != null">
        lockRewardNewId,
      </if>
      <if test="beginAccuralOldDate != null">
        beginAccuralOldDate,
      </if>
      <if test="beginAccuralNewDate != null">
        beginAccuralNewDate,
      </if>
      <if test="beginRedeemOldDate != null">
        beginRedeemOldDate,
      </if>
      <if test="beginRedeemNewDate != null">
        beginRedeemNewDate,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="oid != null">
        #{oid,jdbcType=VARCHAR},
      </if>
      <if test="orderOid != null">
        #{orderOid,jdbcType=VARCHAR},
      </if>
      <if test="lockRewardOldId != null">
        #{lockRewardOldId,jdbcType=VARCHAR},
      </if>
      <if test="lockRewardNewId != null">
        #{lockRewardNewId,jdbcType=VARCHAR},
      </if>
      <if test="beginAccuralOldDate != null">
        #{beginAccuralOldDate,jdbcType=DATE},
      </if>
      <if test="beginAccuralNewDate != null">
        #{beginAccuralNewDate,jdbcType=DATE},
      </if>
      <if test="beginRedeemOldDate != null">
        #{beginRedeemOldDate,jdbcType=DATE},
      </if>
      <if test="beginRedeemNewDate != null">
        #{beginRedeemNewDate,jdbcType=DATE},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.le.jr.am.profit.domain.UpdateLockRewardIdLog">
    update T_MONEY_UPDATE_LOCKREWARDID_LOG
    <set>
      <if test="orderOid != null">
        orderOid = #{orderOid,jdbcType=VARCHAR},
      </if>
      <if test="lockRewardOldId != null">
        lockRewardOldId = #{lockRewardOldId,jdbcType=VARCHAR},
      </if>
      <if test="lockRewardNewId != null">
        lockRewardNewId = #{lockRewardNewId,jdbcType=VARCHAR},
      </if>
      <if test="beginAccuralOldDate != null">
        beginAccuralOldDate = #{beginAccuralOldDate,jdbcType=DATE},
      </if>
      <if test="beginAccuralNewDate != null">
        beginAccuralNewDate = #{beginAccuralNewDate,jdbcType=DATE},
      </if>
      <if test="beginRedeemOldDate != null">
        beginRedeemOldDate = #{beginRedeemOldDate,jdbcType=DATE},
      </if>
      <if test="beginRedeemNewDate != null">
        beginRedeemNewDate = #{beginRedeemNewDate,jdbcType=DATE},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where oid = #{oid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.le.jr.am.profit.domain.UpdateLockRewardIdLog">
    update T_MONEY_UPDATE_LOCKREWARDID_LOG
    set orderOid = #{orderOid,jdbcType=VARCHAR},
      lockRewardOldId = #{lockRewardOldId,jdbcType=VARCHAR},
      lockRewardNewId = #{lockRewardNewId,jdbcType=VARCHAR},
      beginAccuralOldDate = #{beginAccuralOldDate,jdbcType=DATE},
      beginAccuralNewDate = #{beginAccuralNewDate,jdbcType=DATE},
      beginRedeemOldDate = #{beginRedeemOldDate,jdbcType=DATE},
      beginRedeemNewDate = #{beginRedeemNewDate,jdbcType=DATE},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updateTime = #{updateTime,jdbcType=TIMESTAMP}
    where oid = #{oid,jdbcType=VARCHAR}
  </update>

</mapper>