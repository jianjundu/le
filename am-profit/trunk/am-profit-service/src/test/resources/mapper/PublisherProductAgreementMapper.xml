<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.le.jr.am.profit.dao.PublisherProductAgreementMapper" >
  <resultMap id="BaseResultMap" type="com.le.jr.am.profit.domain.PublisherProductAgreement" >
    <id column="oid" property="oid" jdbcType="VARCHAR" />
    <result column="productOid" property="productOid" jdbcType="VARCHAR" />
    <result column="orderOid" property="orderOid" jdbcType="VARCHAR" />
    <result column="agreementCode" property="agreementCode" jdbcType="VARCHAR" />
    <result column="agreementName" property="agreementName" jdbcType="VARCHAR" />
    <result column="agreementUrl" property="agreementUrl" jdbcType="VARCHAR" />
    <result column="agreementType" property="agreementType" jdbcType="VARCHAR" />
    <result column="updateTime" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    oid, productOid, orderOid, agreementCode, agreementName, agreementUrl, agreementType, 
    updateTime, createTime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from T_MONEY_PUBLISHER_PRODUCT_AGREEMENT
    where oid = #{oid,jdbcType=VARCHAR}
  </select>
  
  <insert id="insert" parameterType="com.le.jr.am.profit.domain.PublisherProductAgreement" >
    insert into T_MONEY_PUBLISHER_PRODUCT_AGREEMENT (oid, productOid, orderOid, 
      agreementCode, agreementName, agreementUrl, 
      agreementType, updateTime, createTime
      )
    values (#{oid,jdbcType=VARCHAR}, #{productOid,jdbcType=VARCHAR}, #{orderOid,jdbcType=VARCHAR}, 
      #{agreementCode,jdbcType=VARCHAR}, #{agreementName,jdbcType=VARCHAR}, #{agreementUrl,jdbcType=VARCHAR}, 
      #{agreementType,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
 
  <update id="updateByPrimaryKeySelective" parameterType="com.le.jr.am.profit.domain.PublisherProductAgreement" >
    update T_MONEY_PUBLISHER_PRODUCT_AGREEMENT
    <set >
      <if test="productOid != null" >
        productOid = #{productOid,jdbcType=VARCHAR},
      </if>
      <if test="orderOid != null" >
        orderOid = #{orderOid,jdbcType=VARCHAR},
      </if>
      <if test="agreementCode != null" >
        agreementCode = #{agreementCode,jdbcType=VARCHAR},
      </if>
      <if test="agreementName != null" >
        agreementName = #{agreementName,jdbcType=VARCHAR},
      </if>
      <if test="agreementUrl != null" >
        agreementUrl = #{agreementUrl,jdbcType=VARCHAR},
      </if>
      <if test="agreementType != null" >
        agreementType = #{agreementType,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where oid = #{oid,jdbcType=VARCHAR}
  </update>
  
  <update id="updateBatch" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update T_MONEY_PUBLISHER_PRODUCT_AGREEMENT
            set
		        productOid = #{item.productOid,jdbcType=VARCHAR},
		        orderOid = #{item.orderOid,jdbcType=VARCHAR},
		        agreementCode = #{item.agreementCode,jdbcType=VARCHAR},
		        agreementName = #{item.agreementName,jdbcType=VARCHAR},
		        agreementUrl = #{item.agreementUrl,jdbcType=VARCHAR},
		        agreementType = #{item.agreementType,jdbcType=VARCHAR},
		        updateTime = now(),
		        createTime = #{item.createTime,jdbcType=TIMESTAMP}
	   		where oid = #{item.oid,jdbcType=VARCHAR}
        </foreach>
    </update>

  <select id="findByInvestorTradeOrderAndAgreementType" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from T_MONEY_PUBLISHER_PRODUCT_AGREEMENT
    where orderOid = #{orderOid,jdbcType=VARCHAR}
    AND  agreementType = #{agreementType,jdbcType=VARCHAR}
  </select>

  <select id="findByOrderOid" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from T_MONEY_PUBLISHER_PRODUCT_AGREEMENT
    where orderOid = #{orderOid,jdbcType=VARCHAR}
  </select>

  <insert id="saveBatch" parameterType="ArrayList" >
    insert into T_MONEY_PUBLISHER_PRODUCT_AGREEMENT (oid, productOid, orderOid,
    agreementCode, agreementName, agreementUrl,
    agreementType, updateTime, createTime
    )
    values
    <foreach collection="list" item="obj" index="index" separator=",">
    (#{obj.oid,jdbcType=VARCHAR}, #{obj.productOid,jdbcType=VARCHAR}, #{obj.orderOid,jdbcType=VARCHAR},
    #{obj.agreementCode,jdbcType=VARCHAR}, #{obj.agreementName,jdbcType=VARCHAR}, #{obj.agreementUrl,jdbcType=VARCHAR},
    #{obj.agreementType,jdbcType=VARCHAR}, #{obj.updateTime,jdbcType=TIMESTAMP}, #{obj.createTime,jdbcType=TIMESTAMP}
    )
    </foreach>
  </insert>
  


  <select id="findByAgreementCodeAndAgreementType" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from T_MONEY_PUBLISHER_PRODUCT_AGREEMENT
    where  agreementCode = #{agreementCode,jdbcType=VARCHAR}
    AND agreementType = #{agreementType,jdbcType=VARCHAR}
  </select>
  <select id="queryAgreementByVo" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from T_MONEY_PUBLISHER_PRODUCT_AGREEMENT
    where  1=1
    
    <if test="urlNotNull != null">
    and agreementUrl is not null
    </if>
    <if test="beginTime != null">
    and updateTime >= #{beginTime}
    </if>
    <if test="agreementType != null">
    and agreementType = #{agreementType}
    </if>
    <if test="agreementCode != null">
    and agreementCode = #{agreementCode}
    </if>
    <if test="productOid != null">
    and productOid = #{productOid}
    </if>
    <if test="orderOid != null">
    and orderOid = #{orderOid}
    </if>
    
    
  </select>

</mapper>